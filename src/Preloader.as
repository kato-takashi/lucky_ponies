package {	import flash.display.Graphics;	import flash.display.Shape;	import flash.net.*;	import flash.sampler.NewObjectSample;	import flash.text.TextField;	import flash.text.*;	import flash.text.TextFieldAutoSize;	import jp.progression.casts.*;	import jp.progression.commands.display.*;	import jp.progression.commands.lists.*;	import jp.progression.commands.managers.*;	import jp.progression.commands.media.*;	import jp.progression.commands.net.*;	import jp.progression.commands.tweens.*;	import jp.progression.commands.*;	import jp.progression.data.*;	import jp.progression.events.*;	import jp.progression.executors.*;	import ui.logo_btn;		/**	 * ...	 * @author ...	 */	public class Preloader extends CastPreloader {		private var _loadedPerField:TextField;		private var _progressBar:Shape;		private var _progressBar2:Shape;		private var _logo_btn:logo_btn;		/**		 * 新しい Preloader インスタンスを作成します。		 */		public function Preloader() {			// プリローダーが読み込むファイルと、実行形式を指定します。			super( new URLRequest( "index.swf" ), false, CommandExecutor );		}				/**		 * SWF ファイルの読み込みが完了し、stage 及び loaderInfo にアクセス可能になった場合に送出されます。		 */		override protected function atReady():void {			// TextField を作成します。			_loadedPerField = new TextField();			_logo_btn = new logo_btn();			//_logo_btn.scaleX = 0;			//_logo_btn.alpha = 1;			_logo_btn.x = CastDocument.stage.stageWidth;			_logo_btn.y = -10;						var format:TextFormat = new TextFormat();			format.font = "Trebuchet MS";		// フォント名            format.size = 11;		// 文字のポイントサイズ              					  			format.color = 0xaaaaaa;			_loadedPerField.wordWrap = true;			_loadedPerField.multiline = true;			_loadedPerField.defaultTextFormat = format;						_loadedPerField.width = 210;			_loadedPerField.x = CastDocument.stage.stageWidth/2-_loadedPerField.width/2;			_loadedPerField.y = 0;						_loadedPerField.autoSize = TextFieldAutoSize.CENTER;			_loadedPerField.text = "Loading ... 0%";							// progressBar を作成します。			_progressBar = new Shape();			var gr:Graphics = _progressBar.graphics;			gr.beginFill(0x000000);			gr.drawRect(0, CastDocument.stage.stageHeight/2, CastDocument.stage.stageWidth, 5);			gr.endFill();			_progressBar.scaleX = 0;						_progressBar2 = new Shape();			var gr2:Graphics = _progressBar2.graphics;			gr2.beginFill(0xaaaaaa);			gr2.drawRect(0, CastDocument.stage.stageHeight/2, CastDocument.stage.stageWidth, 5);			gr2.endFill();			_progressBar2.scaleX = 1;		}				/**		 * オブジェクトが読み込みを開始した瞬間に送出されます。		 * このイベント処理の実行中には、ExecutorObject を使用した非同期処理が行えます。		 */		override protected function atCastLoadStart():void {			addCommand(				[new AddChild( foreground , _loadedPerField ),				new AddChild( foreground , _progressBar2 ),				new AddChild( foreground , _progressBar ),				new AddChild( foreground , _logo_btn )				],								// テキストフィールドを画面内に移動させます。				new DoTweener( _loadedPerField, { y:CastDocument.stage.stageHeight/2+_loadedPerField.height, time:1 } ),				new DoTweener( _logo_btn, { x:CastDocument.stage.stageWidth/2+_logo_btn.height, time:1 } )							);		}				/**		 * ダウンロード処理を実行中にデータを受信したときに送出されます。		 */		override protected function atProgress():void {var percent:Number = bytesLoaded / bytesTotal;			// progressBar の横幅を、読み込み状態に応じて変化させます。			_progressBar.scaleX = percent;						// テキストフィールドの表示内容を、読み込み状態に応じて変化させます。			_loadedPerField.text = "Loading ... " + Math.round( percent * 100 ) + "%";		}				/**		 * オブジェクトが読み込みを完了した瞬間に送出されます。		 * このイベント処理の実行中には、ExecutorObject を使用した非同期処理が行えます。		 */		override protected function atCastLoadComplete():void {			addCommand(				// テキストフィールドを画面から消去します。				[new DoTweener( _loadedPerField, { alpha:0, time:0.5 } ),				// progressBar を画面から消去します。				new DoTweener( _progressBar , { alpha:0 , time:0.5 } ),				new DoTweener( _progressBar2 , { alpha:0 , time:0.5 } ),				new DoTweener( _logo_btn , { x:0, alpha:0, time:0.5 } )				],				// テキストフィールドを画面から削除します。				[new RemoveChild( foreground, _loadedPerField ),				// progressBar を画面から削除します。				new RemoveChild( foreground , _progressBar2),				new RemoveChild( foreground , _progressBar ),				new RemoveChild( foreground , _logo_btn )				]			);		}	}}